name: build-and-deploy-to-web-app
run-name: Build & Deploy to Azure Web App

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  ACR_SERVER_NAME: acrglbuksdevopsutils.azurecr.io
  REPOSITORY_NAME: nomad
  TAG: ${{ github.run_id }}

permissions:
  id-token: write

jobs:
  dockerize:
    runs-on: ubuntu-latest
    environment: dev
    outputs:
      POM_VERSION_TAG: ${{ steps.pom_version.outputs.POM_VERSION_TAG }}
    steps:
      - uses: actions/checkout@v4

      - name: Fetch pom version tag
        id: pom_version
        run: |
          POM_VERSION_TAG=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "POM_VERSION_TAG=$POM_VERSION_TAG" >> $GITHUB_OUTPUT
          echo "POM_VERSION_TAG=$POM_VERSION_TAG" >> $GITHUB_ENV

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: ACR login
        run: az acr login --name ${{ env.ACR_SERVER_NAME }}

      - name: Docker build
        run: |
          docker build -t "${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ env.TAG }}" .
          
          docker tag "${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ env.TAG }}" "${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:latest"

      - name: Docker push
        run: |
          docker push ${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ env.TAG }}
          docker push ${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:latest

  deploy_to_web_app:
    needs: dockerize
    runs-on: self-hosted
    strategy:
      matrix:
        environment: [ dev ]
    environment: ${{ matrix.environment }}
    env:
      WEB_APP_NAME: web-t-${{ matrix.environment }}-uks-nomad-01
      WEB_APP_RG_NAME: rg-${{ matrix.environment }}-uks-nomad-01
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Fetch web-app publish-profile
        id: fetch_profile
        run: |
          PUBLISH_PROFILE=$(az webapp deployment list-publishing-profiles --name ${{ env.WEB_APP_NAME }} --resource-group ${{ env.WEB_APP_RG_NAME }} --xml)
          echo "::add-mask::$PUBLISH_PROFILE"
          echo "PUBLISH_PROFILE=$PUBLISH_PROFILE" >> $GITHUB_ENV

      - name: Azure WebApp
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEB_APP_NAME }}
          publish-profile: ${{ env.PUBLISH_PROFILE }}
          images: '${{ env.ACR_SERVER_NAME }}/${{ env.REPOSITORY_NAME }}:${{ env.TAG }}'